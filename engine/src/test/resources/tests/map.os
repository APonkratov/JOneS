///////////////////////////////////////////////////////////////////////
// Тест класса Соответствие
///////////////////////////////////////////////////////////////////////

Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;
	ВсеТесты.Добавить("ТестДолжен_СоздатьСоответствие");
	ВсеТесты.Добавить("ТестДолжен_ОбойтиСоответствиеЦиклом");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьУдаление");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоПолучениеНесуществующегоКлючаНеВызываетОшибки");

	Возврат ВсеТесты;

КонецФункции

Процедура ТестДолжен_СоздатьСоответствие() Экспорт

	Соответствие = Новый Соответствие;

КонецПроцедуры

Процедура ТестДолжен_ОбойтиСоответствиеЦиклом() Экспорт

	Соответствие = Новый Соответствие;
	Соответствие.Вставить(1, "Число");
	Соответствие.Вставить("1", "Строка");
	Соответствие.Вставить('20211127', "Дата");

	ЕстьЧисло = 0;
	ЕстьСтрока = 0;
	ЕстьДата = 0;
	ЕстьНеизведанное = 0;

	Для Каждого мКлючЗначение Из Соответствие Цикл

		Если ТипЗнч(мКлючЗначение.Ключ) = Тип("Число") Тогда
			ЕстьЧисло = ЕстьЧисло + 1;
		ИначеЕсли ТипЗнч(мКлючЗначение.Ключ) = Тип("Строка") Тогда
			ЕстьСтрока = ЕстьСтрока + 1;
		ИначеЕсли ТипЗнч(мКлючЗначение.Ключ) = Тип("Дата") Тогда
			ЕстьДата = ЕстьДата + 1;
		Иначе
			ЕстьНеизведанное = ЕстьНеизведанное + 1;
		КонецЕсли;

	КонецЦикла;

	юТест.ПроверитьРавенство(ЕстьЧисло,  1, "Ожидали число ровно 1 раз");
	юТест.ПроверитьРавенство(ЕстьСтрока, 1, "Ожидали строку ровно 1 раз");
	юТест.ПроверитьРавенство(ЕстьДата,   1, "Ожидали дату ровно 1 раз");

	юТест.ПроверитьРавенство(ЕстьНеизведанное, 0, "При обходе соответствия найдены ключи неизвестного типа");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьУдаление() Экспорт

	Соответствие = Новый Соответствие;

	Соответствие.Вставить(123, 456);
	юТест.ПроверитьРавенство(Соответствие[123], 456);

	Соответствие.Удалить("123");
	юТест.ПроверитьРавенство(Соответствие[123], 456);

	Соответствие.Удалить(123);

	юТест.ПроверитьРавенство(Соответствие[123], Неопределено);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоПолучениеНесуществующегоКлючаНеВызываетОшибки() Экспорт

	Соответствие = Новый Соответствие;

	Значение = Соответствие.Получить("Заведомо отсутствующий ключ");
	юТест.ПроверитьРавенство(Значение, Неопределено, "Отсутствующий ключ вернул не Неопределено");

	Значение = Соответствие["Заведомо отсутствующий ключ"];
	юТест.ПроверитьРавенство(Значение, Неопределено, "Отсутствующий ключ по индексу вернул не Неопределено");

КонецПроцедуры
